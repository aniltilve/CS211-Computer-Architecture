#include "Decoder.h"

#define TOINDEX(x) x > 90? x - 71 : x - 65

void Decoder_Decode1to2(FILE* circuitDescription, int* values)
	{
		char input,
				 output;

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &input);
		

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = ~values[TOINDEX(input)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = values[TOINDEX(input)];
	}


void Decoder_Decode2to4(FILE* circuitDescription, int* values)
	{
		char input1,
				 input2,
				 output;

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &input1);
		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &input2);
		

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = ~values[TOINDEX(input1)] & ~values[TOINDEX(input2)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = ~values[TOINDEX(input1)] & values[TOINDEX(input2)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = values[TOINDEX(input1)] & values[TOINDEX(input2)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = values[TOINDEX(input1)] & ~values[TOINDEX(input2)];
	}


void Decoder_Decode3to8(FILE* circuitDescription, int* values)
	{
		char input1,
				 input2,
				 input3,
				 output;

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &input1);
		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &input2);
		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &input3);

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = ~values[TOINDEX(input1)] & ~values[TOINDEX(input2)] & ~values[TOINDEX(input3)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = ~values[TOINDEX(input1)] & ~values[TOINDEX(input2)] & values[TOINDEX(input3)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = ~values[TOINDEX(input1)] & values[TOINDEX(input2)] & values[TOINDEX(input3)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = ~values[TOINDEX(input1)] & values[TOINDEX(input2)] & ~values[TOINDEX(input3)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = values[TOINDEX(input1)] & values[TOINDEX(input2)] & ~values[TOINDEX(input3)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = values[TOINDEX(input1)] & values[TOINDEX(input2)] & values[TOINDEX(input3)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = values[TOINDEX(input1)] & ~values[TOINDEX(input2)] & values[TOINDEX(input3)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = values[TOINDEX(input1)] & ~values[TOINDEX(input2)] & ~values[TOINDEX(input3)];
	}


void Decoder_Decode4to16(FILE* circuitDescription, int* values)
	{
		char input1,
				 input2,
				 input3,
				 input4,
				 output;

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &input1);
		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &input2);
		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &input3);
		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &input4);


		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = ~values[TOINDEX(input1)] & ~values[TOINDEX(input2)] & ~values[TOINDEX(input3)] & ~values[TOINDEX(input4)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = ~values[TOINDEX(input1)] & ~values[TOINDEX(input2)] & ~values[TOINDEX(input3)] & values[TOINDEX(input4)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = ~values[TOINDEX(input1)] & ~values[TOINDEX(input2)] & values[TOINDEX(input3)] & values[TOINDEX(input4)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = ~values[TOINDEX(input1)] & ~values[TOINDEX(input2)] & values[TOINDEX(input3)] & ~values[TOINDEX(input4)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = ~values[TOINDEX(input1)] & values[TOINDEX(input2)] & values[TOINDEX(input3)] & ~values[TOINDEX(input4)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = ~values[TOINDEX(input1)] & values[TOINDEX(input2)] & values[TOINDEX(input3)] & values[TOINDEX(input4)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = ~values[TOINDEX(input1)] & values[TOINDEX(input2)] & ~values[TOINDEX(input3)] & values[TOINDEX(input4)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = ~values[TOINDEX(input1)] & values[TOINDEX(input2)] & ~values[TOINDEX(input3)] & ~values[TOINDEX(input4)];


		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = values[TOINDEX(input1)] & ~values[TOINDEX(input2)] & ~values[TOINDEX(input3)] & ~values[TOINDEX(input4)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = values[TOINDEX(input1)] & ~values[TOINDEX(input2)] & ~values[TOINDEX(input3)] & ~values[TOINDEX(input4)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = values[TOINDEX(input1)] & ~values[TOINDEX(input2)] & ~values[TOINDEX(input3)] & ~values[TOINDEX(input4)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = values[TOINDEX(input1)] & ~values[TOINDEX(input2)] & ~values[TOINDEX(input3)] & ~values[TOINDEX(input4)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = values[TOINDEX(input1)] & ~values[TOINDEX(input2)] & ~values[TOINDEX(input3)] & ~values[TOINDEX(input4)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = values[TOINDEX(input1)] & ~values[TOINDEX(input2)] & ~values[TOINDEX(input3)] & ~values[TOINDEX(input4)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = values[TOINDEX(input1)] & ~values[TOINDEX(input2)] & ~values[TOINDEX(input3)] & ~values[TOINDEX(input4)];

		fscanf(circuitDescription, "%c%*[ \t\n\v\f\r]", &output);
		values[TOINDEX(output)] = values[TOINDEX(input1)] & ~values[TOINDEX(input2)] & ~values[TOINDEX(input3)] & ~values[TOINDEX(input4)];
	}


void Decoder_Decode(FILE* circuitDescription, int* values)
	{
		int numberOfArguments;

		fscanf(circuitDescription, "%d%*[ \t\n\v\f\r]", &numberOfArguments);
		
		switch(numberOfArguments)
			{
				case 1: Decoder_Decode1to2(circuitDescription, values);
								break;
				case 2: Decoder_Decode2to4(circuitDescription, values);
								break;
				case 3: Decoder_Decode3to8(circuitDescription, values);
								break;
				case 4: Decoder_Decode4to16(circuitDescription, values);
								break;
			}
	}
